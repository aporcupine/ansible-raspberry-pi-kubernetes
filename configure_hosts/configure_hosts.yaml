- hosts: all
  become: yes
  tasks:
    - name: update all packages to the latest version (this may take some time)
      apt:
        update_cache: yes
        upgrade: dist

    - name: set hostnames using inventory new_hostname var
      hostname:
        name: "{{ new_hostname }}"

    - name: test for cgroup_enable=memory
      command: 'grep "cgroup_enable=memory" /boot/firmware/cmdline.txt'
      register: cgroup_group
      ignore_errors: yes

    - name: add cgroup_enable=memory to nobtcmd.txt
      lineinfile:
        path: /boot/firmware/cmdline.txt
        backrefs: True
        state: present
        regexp: '(.*)$'
        line: '\1 cgroup_enable=memory'
      when: cgroup_group.rc == 1

    - name: add overlay to modules to load
      lineinfile:
        path: /etc/modules
        line: overlay

    - name: add br_netfilter to modules to load
      lineinfile:
        path: /etc/modules
        line: br_netfilter
    
    - name: set net.bridge.bridge-nf-call-iptables to 1
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: '1'
        sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
        state: present
      
    - name: set net.ipv4.ip_forward to 1
      sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
        state: present

    - name: set net.bridge.bridge-nf-call-ip6tables to 1
      sysctl:
        name:  net.bridge.bridge-nf-call-ip6tables
        value: '1'
        sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
        state: present
    
    - name: reboot the servers to apply cgroup change
      reboot:

    - name: install software-properties-common
      apt:
        name: [apt-transport-https, ca-certificates, curl, software-properties-common]
        state: present

    - name: add containerd key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: add containerd repo
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present
        filename: containerd
    
    - name: create containerd dir
      file:
        path: /etc/containerd/
        state: directory
    
    - name: install containerd.io
      apt:
        name: containerd.io
        state: present

    - name: set default containerd config
      shell: containerd config default > /etc/containerd/config.toml

    - name: set cgroup driver to systemd
      lineinfile:
        path: /etc/containerd/config.toml
        insertafter: '\[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options\]'
        line: SystemdCgroup = true

    - name: restart containerd
      service:
        daemon_reload: yes
        name: containerd
        enabled: yes
        state: restarted

    - name: install arptables
      apt:
        name: arptables
        state: present
    
    - name: install ebtables
      apt:
        name: ebtables
        state: present

    - name: ensure we're not using nftables (1)
      alternatives:
        name: iptables
        path: /usr/sbin/iptables-legacy

    - name: ensure we're not using nftables (2)
      alternatives:
        name: ip6tables
        path: /usr/sbin/ip6tables-legacy

    - name: ensure we're not using nftables (3)
      alternatives:
        name: arptables
        path: /usr/sbin/arptables-legacy

    - name: ensure we're not using nftables (4)
      alternatives:
        name: ebtables
        path: /usr/sbin/ebtables-legacy

    - name: add k8s apt-key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
    
    - name: add k8s repo
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes
        update_cache_retries: 20 # k8s repo sometimes 404s https://github.com/kubernetes/kubernetes/issues/97264

    - name: install k8s
      apt:
        name: ['kubectl', 'kubelet', 'kubeadm']
        state: present
    
    - name: Hold kubectl
      dpkg_selections:
        name: kubectl
        selection: hold
    
    - name: Hold kubelet
      dpkg_selections:
        name: kubelet
        selection: hold

    - name: Hold kubeadm
      dpkg_selections:
        name: kubeadm
        selection: hold
